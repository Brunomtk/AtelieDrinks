// <auto-generated />
using System;
using AtelieDrinks.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AtelieDrinks.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20230522192649_add-migration InitialMigration")]
    partial class addmigrationInitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AtelieDrinks.Models.Base_alcoolica", b =>
                {
                    b.Property<int>("id_base_alcoolica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_base_alcoolica");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_base_alcoolica"));

                    b.Property<int?>("Ficha_tecnicaid_ficha")
                        .HasColumnType("integer");

                    b.Property<decimal>("custo_garrafa")
                        .HasColumnType("numeric")
                        .HasColumnName("custo_garrafa");

                    b.Property<decimal>("custo_total")
                        .HasColumnType("numeric")
                        .HasColumnName("custo_total");

                    b.Property<int?>("id_bebidaid_marca")
                        .HasColumnType("integer");

                    b.Property<int?>("id_marca1")
                        .HasColumnType("integer");

                    b.Property<string>("nome_bebida")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_bebida");

                    b.Property<string>("nome_marca")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_marca");

                    b.Property<int>("quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.HasKey("id_base_alcoolica");

                    b.HasIndex("Ficha_tecnicaid_ficha");

                    b.HasIndex("id_bebidaid_marca");

                    b.HasIndex("id_marca1");

                    b.ToTable("Base_alcoolica");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Deposito", b =>
                {
                    b.Property<int>("id_item")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_item");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_item"));

                    b.Property<int?>("Insumosid_insumo")
                        .HasColumnType("integer");

                    b.Property<decimal>("custo_tecnico")
                        .HasColumnType("numeric")
                        .HasColumnName("custo_deposito");

                    b.Property<string>("descricao_observacao")
                        .HasColumnType("text")
                        .HasColumnName("descricao_observacao");

                    b.Property<string>("medida_de_armazenamento")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("medida_de_armazenamento");

                    b.Property<string>("nome_item")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_item");

                    b.Property<int>("quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.Property<string>("setor_armazenamento")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("setor_armazenamento");

                    b.HasKey("id_item");

                    b.HasIndex("Insumosid_insumo");

                    b.ToTable("Deposito");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Drinks", b =>
                {
                    b.Property<int>("id_drink")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_drink");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_drink"));

                    b.Property<decimal>("custo_tecnico")
                        .HasColumnType("numeric")
                        .HasColumnName("custo_tecnico");

                    b.Property<string>("ingredientes")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ingredientes");

                    b.Property<string>("nome_drink")
                        .HasColumnType("text")
                        .HasColumnName("nome_drink");

                    b.Property<int>("quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.HasKey("id_drink");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Ficha_tecnica", b =>
                {
                    b.Property<int>("id_ficha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_ficha");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_ficha"));

                    b.Property<decimal>("custo_base_alcoolica")
                        .HasColumnType("numeric")
                        .HasColumnName("custo_base_alcoolica");

                    b.Property<decimal>("custo_insumo")
                        .HasColumnType("numeric")
                        .HasColumnName("custo_insumo");

                    b.Property<int>("medida")
                        .HasColumnType("integer")
                        .HasColumnName("medida");

                    b.Property<decimal>("ml_unidade")
                        .HasColumnType("numeric")
                        .HasColumnName("ml_unidade");

                    b.Property<string>("nome_base_alcoolica")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_base_alcoolica");

                    b.Property<string>("nome_drink")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_drink");

                    b.Property<string>("nome_insumo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_insumo");

                    b.Property<decimal>("valor_ficha")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_ficha");

                    b.HasKey("id_ficha");

                    b.ToTable("Ficha Tecnica");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Historico", b =>
                {
                    b.Property<int>("id_historico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_historico");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_historico"));

                    b.Property<int?>("Historicoid_historico")
                        .HasColumnType("integer");

                    b.Property<decimal>("base_orcamento")
                        .HasColumnType("numeric")
                        .HasColumnName("base_orcamento");

                    b.Property<decimal>("comissao_comercial")
                        .HasColumnType("numeric")
                        .HasColumnName("comisao_comercial");

                    b.Property<decimal>("comissao_gerencia")
                        .HasColumnType("numeric")
                        .HasColumnName("comisao_gerencia");

                    b.Property<decimal>("CustoOperacional")
                        .HasColumnType("numeric")
                        .HasColumnName("CustoOperacional");

                    b.Property<decimal>("custo_por_pessoa")
                        .HasColumnType("numeric")
                        .HasColumnName("custo_por_pessoa");

                    b.Property<decimal>("custo_total")
                        .HasColumnType("numeric")
                        .HasColumnName("custo_total");

                    b.Property<decimal>("custo_total_insumos")
                        .HasColumnType("numeric")
                        .HasColumnName("custo_total_insumos");

                    b.Property<decimal>("margem_negociacao")
                        .HasColumnType("numeric")
                        .HasColumnName("margem_negociacao");

                    b.Property<int>("numero_pessoas")
                        .HasColumnType("integer")
                        .HasColumnName("numero_pessoas");

                    b.Property<decimal>("previsao_lucro")
                        .HasColumnType("numeric")
                        .HasColumnName("previsao_lucro");

                    b.Property<int>("qtde_convidados")
                        .HasColumnType("integer")
                        .HasColumnName("qtde_convidados");

                    b.Property<int>("qtde_drinks")
                        .HasColumnType("integer")
                        .HasColumnName("qtde_drinks");

                    b.Property<decimal>("valor_arredondado_pra_cima")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_arredondado_pra_cima");

                    b.Property<decimal>("valor_orcamento")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_orcamento");

                    b.Property<decimal>("valor_primario")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_primario");

                    b.HasKey("id_historico");

                    b.HasIndex("Historicoid_historico");

                    b.ToTable("Historico");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Insumos", b =>
                {
                    b.Property<int>("id_insumo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_insumo");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_insumo"));

                    b.Property<int?>("Ficha_tecnicaid_ficha")
                        .HasColumnType("integer");

                    b.Property<int?>("Orcamentoid_orcamento")
                        .HasColumnType("integer");

                    b.Property<decimal>("custo_insumo")
                        .HasColumnType("numeric")
                        .HasColumnName("custo_insumo");

                    b.Property<string>("nome_insumo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_insumo");

                    b.Property<int>("quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.HasKey("id_insumo");

                    b.HasIndex("Ficha_tecnicaid_ficha");

                    b.HasIndex("Orcamentoid_orcamento");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Marca", b =>
                {
                    b.Property<int>("id_marca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_marca");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_marca"));

                    b.Property<decimal>("custo_garrafa")
                        .HasColumnType("numeric")
                        .HasColumnName("custo_garrafa");

                    b.Property<int>("id_bebida")
                        .HasColumnType("integer")
                        .HasColumnName("id_bebida");

                    b.Property<string>("nome_bebida")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_bebida");

                    b.Property<string>("nome_marca")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_marca");

                    b.HasKey("id_marca");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Numero_convidados", b =>
                {
                    b.Property<int>("id_orcamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_Numero_convidados");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_orcamento"));

                    b.Property<int>("numero_pessoas")
                        .HasColumnType("integer")
                        .HasColumnName("numero_pessoas");

                    b.HasKey("id_orcamento");

                    b.ToTable("Numero_convidados");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Orcamento", b =>
                {
                    b.Property<int>("id_orcamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_orcamento");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_orcamento"));

                    b.Property<decimal>("base_orcamento")
                        .HasColumnType("numeric")
                        .HasColumnName("base_orcamento");

                    b.Property<decimal>("comissao_comercial")
                        .HasColumnType("numeric")
                        .HasColumnName("comisao_comercial");

                    b.Property<decimal>("comissao_gerencia")
                        .HasColumnType("numeric")
                        .HasColumnName("comisao_gerencia");

                    b.Property<decimal>("CustoOperacional")
                        .HasColumnType("numeric")
                        .HasColumnName("CustoOperacional");

                    b.Property<decimal>("custo_por_pessoa")
                        .HasColumnType("numeric")
                        .HasColumnName("custo_por_pessoa");

                    b.Property<decimal>("custo_total")
                        .HasColumnType("numeric")
                        .HasColumnName("custo_total");

                    b.Property<decimal>("custo_total_insumos")
                        .HasColumnType("numeric")
                        .HasColumnName("custo_total_insumos");

                    b.Property<decimal>("margem_negociacao")
                        .HasColumnType("numeric")
                        .HasColumnName("margem_negociacao");

                    b.Property<int>("numero_pessoas")
                        .HasColumnType("integer")
                        .HasColumnName("numero_pessoas");

                    b.Property<decimal>("previsao_lucro")
                        .HasColumnType("numeric")
                        .HasColumnName("previsao_lucro");

                    b.Property<int>("qtde_convidados")
                        .HasColumnType("integer")
                        .HasColumnName("qtde_convidados");

                    b.Property<int>("qtde_drinks")
                        .HasColumnType("integer")
                        .HasColumnName("qtde_drinks");

                    b.Property<decimal>("valor_arredondado_pra_cima")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_arredondado_pra_cima");

                    b.Property<decimal>("valor_orcamento")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_orcamento");

                    b.Property<decimal>("valor_primario")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_primario");

                    b.HasKey("id_orcamento");

                    b.ToTable("Orcamento");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Base_alcoolica", b =>
                {
                    b.HasOne("AtelieDrinks.Models.Ficha_tecnica", null)
                        .WithMany("id_base_alcoolica")
                        .HasForeignKey("Ficha_tecnicaid_ficha");

                    b.HasOne("AtelieDrinks.Models.Marca", "id_bebida")
                        .WithMany()
                        .HasForeignKey("id_bebidaid_marca");

                    b.HasOne("AtelieDrinks.Models.Marca", "id_marca")
                        .WithMany()
                        .HasForeignKey("id_marca1");

                    b.Navigation("id_bebida");

                    b.Navigation("id_marca");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Deposito", b =>
                {
                    b.HasOne("AtelieDrinks.Models.Insumos", null)
                        .WithMany("id_item")
                        .HasForeignKey("Insumosid_insumo");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Historico", b =>
                {
                    b.HasOne("AtelieDrinks.Models.Historico", null)
                        .WithMany("id_orcamento")
                        .HasForeignKey("Historicoid_historico");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Insumos", b =>
                {
                    b.HasOne("AtelieDrinks.Models.Ficha_tecnica", null)
                        .WithMany("id_insumo")
                        .HasForeignKey("Ficha_tecnicaid_ficha");

                    b.HasOne("AtelieDrinks.Models.Orcamento", null)
                        .WithMany("id_insumo")
                        .HasForeignKey("Orcamentoid_orcamento");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Ficha_tecnica", b =>
                {
                    b.Navigation("id_base_alcoolica");

                    b.Navigation("id_insumo");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Historico", b =>
                {
                    b.Navigation("id_orcamento");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Insumos", b =>
                {
                    b.Navigation("id_item");
                });

            modelBuilder.Entity("AtelieDrinks.Models.Orcamento", b =>
                {
                    b.Navigation("id_insumo");
                });
#pragma warning restore 612, 618
        }
    }
}
